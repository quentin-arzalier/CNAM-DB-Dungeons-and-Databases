name: dockercompose4022894546895365372
services:
  dungeons-and-databases-db:
    container_name: dungeons-and-databases-db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: passw0rd!
      POSTGRES_USER: postgres
    expose:
    - "5432"
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready
      timeout: 5s
      interval: 10s
      retries: 5
    image: postgres:latest
    networks:
      dungeons-and-databases-network: null
    ports:
    - mode: ingress
      target: 5432
      published: "5433"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\quent\source\repos\Dungeons&Databases\Dungeons&Databases\SqlScripts
      target: /docker-entrypoint-initdb.d
      bind:
        create_host_path: true
    - type: volume
      source: pg_data
      target: /var/lib/postgresql/data
      volume: {}
  dungeonsdatabases:
    build:
      context: C:\Users\quent\source\repos\Dungeons&Databases
      dockerfile: ./Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Dungeons&Databases
      target: base
    container_name: Dungeons_Databases_1
    depends_on:
      dungeons-and-databases-db:
        condition: service_healthy
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: dungeonsdatabases:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net6.0/Dungeons&Databases.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      dungeons-and-databases-network: null
    ports:
    - mode: ingress
      target: 80
      published: "49168"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "49169"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\quent\.nuget\packages\
      target: /.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
      target: /HotReloadAgent
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net6.0
      target: /HotReloadProxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\quent\source\repos\Dungeons&Databases\Dungeons&Databases
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\quent\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\quent\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\quent\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\quent\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\quent\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\quent\source\repos\Dungeons&Databases\Dungeons&Databases
      target: /src
      bind:
        create_host_path: true
networks:
  dungeons-and-databases-network:
    name: dockercompose4022894546895365372_dungeons-and-databases-network
    driver: bridge
volumes:
  pg_data:
    name: dockercompose4022894546895365372_pg_data